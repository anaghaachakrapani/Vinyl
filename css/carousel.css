/* `.carousel` elements
 * -------------------------------------------------------------------------*/

.carousel {
  anchor-name: --carousel;
  container-type: inline-size;

  /* scroll styles */
  overflow-x: auto;
  overscroll-behavior-x: contain;
  scroll-snap-type: x mandatory;
  scrollbar-width: none;

  &:focus-visible {
    scrollbar-color: var(--link) transparent;
    outline: none;
  }

  @media (prefers-reduced-motion: no-preference) {
    scroll-behavior: smooth;
  }
}

.carousel__slide {
  scroll-snap-align: center;

  :where(.carousel--offscreen-inert) & {
    animation: offscreen-inert linear both;
    animation-timeline: view(x);
  }

  :where(.carousel--unsnapped-inert) & {
    animation: offscreen-inert linear both;
    animation-timeline: view(x);
  }

  :where(.carousel--unsnapped-inert) & {
    container-type: scroll-state;

    & > * {
      @container not scroll-state(snapped) {
        interactivity: inert;
      }
    }
  }
}

/* `.carousel` states
 * -------------------------------------------------------------------------*/

.carousel--vertical {
  /* scroll styles */
  overflow-y: auto;
  overscroll-behavior-y: contain;
  scroll-snap-type: y mandatory;
}

.carousel--bidi {
  /* scroll styles */
  overflow: auto;
  overscroll-behavior: contain;
  scroll-snap-type: both mandatory;
}

.carousel--scroll-markers {
  scroll-marker-group: before;

  &::scroll-marker-group {
    position: absolute;
    position-anchor: --carousel;

    container: marker-group / inline-size;

    display: grid;
    gap: var(--size-2);
    place-content: safe center;
    box-sizing: border-box;
    border-radius: var(--radius-round);

    scrollbar-width: none;
    scroll-behavior: smooth;
  }

  &:where(:not(.carousel--vertical), .carousel--bidi)::scroll-marker-group {
    inline-size: 100%;
    max-inline-size: min(90cqi, 210px);
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    overscroll-behavior-x: contain;

   

    top: anchor(bottom);
    left: calc(anchor(left) - 10%);
    right: calc(anchor(right) - 10%);
    margin-block: var(--size-3);

    grid-auto-columns: var(--size-3);
    grid-auto-flow: column;
    justify-self: center;
  }

  &:where(.carousel--vertical)::scroll-marker-group {
    position-area: left center;

    margin-inline: var(--size-3);
    overflow-y: auto;
    scroll-snap-type: y mandatory;

    inline-size: var(--size-5);
    block-size: 80cqb;
    max-block-size: min(50cqb, 210px);

    grid-auto-rows: var(--size-3);
    grid-auto-flow: row;

    padding-block: 10px; /* space for mask */
    padding-inline: 0;
    scroll-padding-block: 10px;
    / */
  }

  .carousel__slide {
    &::scroll-marker {
      content: "" / attr(data-label);
      scroll-snap-align: center;
      aspect-ratio: 1;
      cursor: pointer;
      -webkit-tap-highlight-color: transparent;
      text-decoration: none;
      -webkit-tap-highlight-color: transparent;
      transition:
        transform 0.3s ease,
        outline-offset 0.25s ease
      ;
      animation: scale-in-and-out linear both;
      animation-timeline: view(x);

      /* todo: remove once marker `interactivity` is inherited from `::scroll-marker-group` */
      interactivity: auto;
    }

    &::scroll-marker:target-current {
  
    }

    @media (forced-colors: active) {
      &::scroll-marker:target-current {
    
      }
    }

    &::scroll-marker:not(:active):hover {
      transform: scale(1.25);
    }

    /* todo: switch backt of focus-visible */
    &::scroll-marker:not(:active):focus {
    
    }

    :where(.carousel--vertical) &::scroll-marker {
      animation-timeline: view(y);
    }
  }
}

/* TODO:
  up, down
  use scroll-state(scrollable) to auto generate buttons */
.carousel--scroll-buttons {
  &::scroll-button(*) {
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;

    position: absolute;
    z-index: 1;
    position-anchor: --carousel;

    font-size: 24px;
    inline-size: 44px;
    margin: 12px;

    font-family: "Material Symbols Outlined";
    line-height: 1;
    font-variation-settings:
      "FILL" 0,
      "wght" 100,
      "GRAD" 0,
      "opsz" 24;

    display: flex;
    place-items: center;
    place-content: center;
    aspect-ratio: 1;


    transition:
      transform 0.3s ease,
      opacity 0.5s ease,
      background-color 0.3s ease,
      outline-offset 0.25s ease;

    @media (forced-colors: active) {
      background: Canvas;
    }
  }

  &:where(:not(.carousel--vertical), .carousel--bidi) {
    &::scroll-button(right) {
      --_inner: center span-inline-start;
      --_inner-under: block-end span-inline-start;
      --_inner-over: block-start span-inline-start;
      --_outer: inline-end center;
      --_outer-under: end;
      --_outer-over: block-start inline-end;

      position-area: var(--_outer);
      content: "arrow_forward" / "Scroll Right";
    }
    &::scroll-button(left) {
      --_inner: center span-inline-end;
      --_inner-under: block-end span-inline-end;
      --_inner-over: block-start span-inline-end;
      --_outer: inline-start center;
      --_outer-under: block-end inline-start;
      --_outer-over: start;

      position-area: var(--_outer);
      content: "arrow_back" / "Scroll Left";
    }

    /* 120px is both arrows plus their margins */
    /* inner arrows when carousel is reaching full width of viewport or container */
    @container (inline-size >= calc(100cqi - 120px)) {
      &::scroll-button(right),
      &::scroll-button(left) {
        position-area: var(--_inner);
      }
    }
  }

  &:where(.carousel--vertical, .carousel--bidi) {
    &::scroll-button(down) {
      --_inner: center span-block-start;
      --_inner-under: block-end span-inline-end;
      --_inner-over: span-block-start span-inline-end;
      --_outer: block-end;
      --_outer-under: inline-start span-block-start;
      --_outer-over: inline-start block-end;

      position-area: var(--_outer);
      content: "arrow_downward" / "Scroll Down";
    }
    &::scroll-button(up) {
      --_inner: center span-block-end;
      --_inner-under: span-inline-end block-start;
      --_inner-over: span-inline-end span-block-end;
      --_outer: block-start;
      --_outer-under: inline-start span-block-end;
      --_outer-over: block-start inline-start;

      position-area: var(--_outer);
      content: "arrow_upward" / "Scroll Up";
    }

    /* 120px is both arrows plus their margins */
    /* inner arrows when carousel is reaching full height of viewport or container */
    @container (block-size >= calc(100cqb - 120px)) {
      &::scroll-button(up),
      &::scroll-button(down) {
        position-area: var(--_inner);
      }
    }
  }

  &::scroll-button(*):not(:disabled):is(:hover, :focus-visible) {
    background-color: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.5);
    font-variation-settings: "opsz" 30;
    transform: scale(1.1);
  }

  &::scroll-button(*):not(:active):focus-visible {
    outline-offset: 2px;
    outline: 2px solid #7B3AFF;
  }

  &::scroll-button(right):not(:disabled):active {
    transform: translateX(5px) scale(0.95);
  }
  &::scroll-button(left):not(:disabled):active {
    transform: translateX(-5px) scale(0.95);
  }
  &::scroll-button(up):not(:disabled):active {
    transform: translateY(-5px) scale(0.95);
  }
  &::scroll-button(down):not(:disabled):active {
    transform: translateY(5px) scale(0.95);
  }

  &::scroll-button(*):disabled {
    opacity: 25%;
    cursor: not-allowed;
  }
}

/* `.carousel` animations
 * -------------------------------------------------------------------------*/

@keyframes scale-in-and-out {
	entry 0%  {
		transform: scale(.25);
	}
	entry 100%  {
		transform: scale(1);
	}

	exit 0% {
		transform: scale(1);
	}
	exit 100% {
		transform: scale(.25);
	}
}

@keyframes offscreen-inert {
  entry 0%, exit 100% {
    interactivity: inert;
  }
  entry 100%, exit 0% {
    interactivity: auto;
  }
}
